{
  "openapi": "3.0.1",
  "info": {
    "title": "Vatis HTTP Gateway",
    "description": "Vatis HTTP Gateway API",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://http-gateway.vatis.tech",
      "description": "Default server"
    }
  ],
  "paths": {
    "/http-gateway/api/v1/upload": {
      "post": {
        "summary": "Uploads a stream of bytes",
        "operationId": "upload",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Stream id. The stream created on this upload will bear this id",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Stream name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "query",
            "description": "Stream group id",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "streamConfigurationTemplateId",
            "in": "query",
            "description": "Stream configuration template id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "patches",
            "in": "query",
            "description": "Stream patches. A map of key-value pairs where all keys start with 'patches.'. By default, a replace patch will be applied. To add, prefix the value with '+' (e.g. patches.key=+value). To remove, set the value to '-' (e.g. patches.key=-). To escape the special characters + and -, use '\\' escape-character. ",
            "explode": true,
            "schema": {
              "type": "object"
            },
            "example": {
              "patches.key1": "value1",
              "patches.key2": "value2"
            }
          },
          {
            "name": "X-Vat-Meta-Template-Patch",
            "in": "header",
            "description": "Stream configuration template JSON patches as described in RFC-6902",
            "schema": {
              "type": "string"
            },
            "example": [
              {
                "op": "replace",
                "path": "/json/path",
                "value": "some_value"
              }
            ]
          }
        ],
        "requestBody": {
          "description": "The stream of bytes to upload",
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamDto"
                }
              }
            }
          },
          "default": {
            "description": "Error while uploading the stream",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerToken": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "internalErrorName": {
            "type": "string"
          },
          "nestedErrors": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "ProcessorConfigurationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/SubscriptionDto"
          },
          "destination": {
            "$ref": "#/components/schemas/TopicDto"
          },
          "clusterDomainName": {
            "type": "string"
          },
          "podsDiscoveryClusterDomainName": {
            "type": "string"
          },
          "propertiesSchema": {
            "type": "string"
          },
          "properties": {
            "type": "object"
          },
          "egress": {
            "$ref": "#/components/schemas/ProcessorEgressConfigurationDto"
          }
        }
      },
      "ProcessorEgressConfigurationDto": {
        "type": "object",
        "properties": {
          "persist": {
            "type": "boolean"
          },
          "sink": {
            "type": "boolean"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "StreamConfigurationDto": {
        "type": "object",
        "properties": {
          "streamConfigurationTemplateId": {
            "type": "string"
          },
          "dataSource": {
            "$ref": "#/components/schemas/TopicDto"
          },
          "dataSinks": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/TopicDto"
            }
          },
          "processors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessorConfigurationDto"
            }
          }
        }
      },
      "StreamDto": {
        "type": "object",
        "properties": {
          "streamId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "groupId": {
            "type": "string",
            "format": "uuid"
          },
          "configuration": {
            "$ref": "#/components/schemas/StreamConfigurationDto"
          },
          "createdTimestamp": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "groupCreatorId": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "READY",
              "COMPLETED",
              "FAILED"
            ]
          },
          "stateDescription": {
            "type": "string"
          }
        }
      },
      "SubscriptionDto": {
        "type": "object",
        "properties": {
          "subscription": {
            "type": "string"
          },
          "topic": {
            "type": "string"
          },
          "messageSchema": {
            "type": "string"
          },
          "connectionOptions": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "TopicDto": {
        "type": "object",
        "properties": {
          "topic": {
            "type": "string"
          },
          "messageSchema": {
            "type": "string"
          },
          "connectionOptions": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "messageHeaders": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "subscriptions": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/SubscriptionDto"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerToken": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
